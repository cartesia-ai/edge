[tool.ruff]
# Add more rule codes as needed
lint.extend-select = [
    "D",    # pydocstyle - to replace docformatter
]

# Ignore specific rules
lint.ignore = [
    "E731",  # Do not assign a lambda expression, use a def
    "E203",  # Whitespace before ':'
    "E741",  # Ambiguous variable name: `l`
    "W605",  # Invalid escape sequence
    # "F401",  # Ignore unused imports in __init__.py

    # Docstring Rules to Ignore
    "D100",  # Missing docstring in public module
    # "D101",  # Missing docstring in public class
    # "D102",  # Missing docstring in public method
    # "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    # "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D205",  # 1 Blank line required between summary line and description
    "D212",  # Multi-line docstring summary should start at the first line (to allow google style docstrings)
    "D405",  # Capitalize section name
    "D417",  # Missing argument description
]

# Exclude specific files and patterns
exclude = [
    "setup.py",
    "^.*https?://.*$",  # Long URLs in comments
    "^.*figure.*$",
]

# Set the maximum line length
line-length = 100

# Enable the count of violations
output-format = "full"

# [tool.ruff.lint.isort]
# force-wrap-aliases = true
# combine-as-imports = true
# force-sort-within-sections = true
# known-first-party = ["cartesia_mlx", "cartesia_metal"]
# known-third-party = []
# known-local-folder = []
# lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
known_first_party = ["cartesia_metal", "cartesia_mlx", "cartesia_pytorch"]
